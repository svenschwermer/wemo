------------2DWs outbound------------

<?xml version="1.0" encoding="utf-8"?>
<capabilityProfiles>
    <capabilityProfile>
        <capabilityType>
            <type>ZoneCtl</type>
        </capabilityType>
        <capabilityId>10500</capabilityId>
        <profileName>IASZone</profileName>
        <specification>0</specification>
        <dataType />
        <values>{0~4294967295}</values>
    </capabilityProfile>
    <capabilityProfile>
        <capabilityType>
            <type />
        </capabilityType>
        <capabilityId>20500</capabilityId>
        <profileName>SensorConfig</profileName>
        <specification>0</specification>
        <dataType />
        <values>{0:Diable, 1:Enable}</values>
    </capabilityProfile>
    <capabilityProfile>
        <capabilityType>
            <type />
        </capabilityType>
        <capabilityId>30501</capabilityId>
        <profileName>SensorTestMode</profileName>
        <specification>0</specification>
        <dataType />
        <values>{1:Start Test mode}</values>
    </capabilityProfile>
    <capabilityProfile>
        <capabilityType>
            <type />
        </capabilityType>
        <capabilityId>20502</capabilityId>
        <profileName>SensorKeyPress</profileName>
        <specification>0</specification>
        <dataType />
        <values>{1:Key pressed short, 2: key pressed long}</values>
    </capabilityProfile>
</capabilityProfiles>


-------------------inbound--------------


<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<capabilityProfiles
    xmlns:modelns="http://datamodel.components.cs.belkin.com/">
    <capabilityProfile>
        <resultCode>
            <code>ERR_INVALID_CAPABILITY_TYPE</code>
            <description>Capability Profile type not valid</description>
        </resultCode>
        <capabilityType>
            <type>ZoneCtl</type>
        </capabilityType>
        <capabilityId>10500</capabilityId>
        <profileName>IASZone</profileName>
        <specification>0</specification>
        <dataType>0</dataType>
    </capabilityProfile>
    <capabilityProfile>
        <resultCode>
            <code>ERR_CAPABILITY_ID_ALREADY_EXIST</code>
            <description>Capability Id already exists</description>
        </resultCode>
        <capabilityType>
            <type></type>
        </capabilityType>
        <capabilityId>20500</capabilityId>
        <profileName>SensorConfig</profileName>
        <specification>0</specification>
        <dataType>0</dataType>
    </capabilityProfile>
    <capabilityProfile>
        <resultCode>
            <code>ERR_CAPABILITY_ID_ALREADY_EXIST</code>
            <description>Capability Id already exists</description>
        </resultCode>
        <capabilityType>
            <type></type>
        </capabilityType>
        <capabilityId>30501</capabilityId>
        <profileName>SensorTestMode</profileName>
        <specification>0</specification>
        <dataType>0</dataType>
    </capabilityProfile>
    <capabilityProfile>
        <resultCode>
            <code>ERR_CAPABILITY_ID_ALREADY_EXIST</code>
            <description>Capability Id already exists</description>
        </resultCode>
        <capabilityType>
            <type></type>
        </capabilityType>
        <capabilityId>20502</capabilityId>
        <profileName>SensorKeyPress</profileName>
        <specification>0</specification>
        <dataType>0</dataType>
    </capabilityProfile>
</capabilityProfiles>




-----------------------log------------------------


WEMO: 14:53:29 | remote.debug <ledLightRemoteHandler.c:CreateCapsProfilesXML:939> [0x2f7ae520:"RemoteWorkerThre"] CreateCapsProfilesXML: SD_GetCapabilityList = 5

WEMO: 14:53:29 | remote.debug <ledLightRemoteHandler.c:CreateCapsProfilesXML:1031> [0x2f7ae520:"RemoteWorkerThre"] CreateCapsProfilesXML: Capability nCount = 5

WEMO: 14:53:29 | remote.debug <ledLightRemoteHandler.c:RegisterCapabilityProfiles:1119> [0x2f7ae520:"RemoteWorkerThre"] RegisterCapabilityProfiles: URL = https://api.xbcs.net:8443/apis/http/device/capabilityprofiles

Cached MAC Address = B4:75:0E:1E:1D:84 
WEMO: 14:53:29 | remote.debug <ledLightRemoteHandler.c:SendHttpRequestWithAuth:739> [0x2f7ae520:"RemoteWorkerThre"] MAC Address of plug-in device is B4:75:0E:1E:1D:84

Cached MAC Address = B4:75:0E:1E:1D:84 
WEMO: 14:53:29 | remote.debug <ledLightRemoteHandler.c:SendHttpRequestWithAuth:741> [0x2f7ae520:"RemoteWorkerThre"] Serial Number of plug-in device is 231347B010015A

WEMO: 14:53:29 | remote.debug <ledLightRemoteHandler.c:SendHttpRequestWithAuth:743> [0x2f7ae520:"RemoteWorkerThre"] Key for plug-in device is 5f00da93-f913-460f-865b-59e0828feea2

WEMO: 14:53:29 | app.debug <logger.c:pluginLog:331> [0x2f7ae520:"RemoteWorkerThre"] wemoApp[1834:{RemoteWorkerThre}]:[2015-08-04][14:53:29.998551]<sigGen.c:createAuthSignature:111> [0x2f7ae520:"RemoteWorkerThre"] Expires before 1438674809

WEMO: 14:53:29 | app.debug <logger.c:pluginLog:331> [0x2f7ae520:"RemoteWorkerThre"] wemoApp[1834:{RemoteWorkerThre}]:[2015-08-04][14:53:29.998950]<sigGen.c:createAuthSignature:113> [0x2f7ae520:"RemoteWorkerThre"] Expires after 500 1438675309

WEMO: 14:53:30 | remote.debug <ledLightRemoteHandler.c:SendHttpRequestWithAuth:783> [0x2f7ae520:"RemoteWorkerThre"] --- inData --- 

WEMO: 14:53:30 | remote.debug <ledLightRemoteHandler.c:SendHttpRequestWithAuth:784> [0x2f7ae520:"RemoteWorkerThre"] inDataLength = 1042

WEMO: remote.debug <?xml version="1.0" encoding="utf-8"?><capabilityProfiles><capabilityProfile><capabilityType><type>ZoneCtl</type></capabilityTyp [ 1717989023 ]
WEMO: remote.debug e><capabilityId>10500</capabilityId><profileName>IASZone</profileName><specification>0</specification><dataType /><values>{0~429 [ 1717989023 ]
WEMO: remote.debug 4967295}</values></capabilityProfile><capabilityProfile><capabilityType><type /></capabilityType><capabilityId>20500</capability [ 1717989023 ]
WEMO: remote.debug Id><profileName>SensorConfig</profileName><specification>0</specification><dataType /><values>{0:Diable, 1:Enable}</values></cap [ 1717989023 ]
WEMO: remote.debug abilityProfile><capabilityProfile><capabilityType><type /></capabilityType><capabilityId>30501</capabilityId><profileName>Sensor [ 1717989023 ]
WEMO: remote.debug TestMode</profileName><specification>0</specification><dataType /><values>{1:Start Test mode}</values></capabilityProfile><capab [ 1717989023 ]
WEMO: remote.debug ilityProfile><capabilityType><type /></capabilityType><capabilityId>20502</capabilityId><profileName>SensorKeyPress</profileName [ 1717989023 ]
WEMO: remote.debug ><specification>0</specification><dataType /><values>{1:Key pressed short, 2: key pressed long}</values></capabilityProfile></ca [ 1717989023 ]
WEMO: remote.debug pabilityProfiles>
 [ 1717989023 ]
WEMO: 14:53:30 | app.debug <logger.c:pluginLog:331> [0x2ebae520:""] wemoApp[1823:{}]:[2015-08-04][14:53:30.124739]<controlleedevice.c:CtrleeDeviceHandleActionRequest:1948> [0x2ebae520:""] Action found: GetEndDevices

WEMO: 14:53:30 | upnp.debug <ledLightUPnPHandler.c:IsZigbeeSetupDone:1539> [0x2ebae520:""] flag_setup_done is already existed...

WEMO: 14:53:30 | upnp.debug <ledLightUPnPHandler.c:GetEndDevices:1744> [0x2ebae520:""] DevUDN uuid:Bridge-1_0-231347B010015A, pReqListType SCAN_LIST....dp

WEMO: 14:53:30 | upnp.debug <ledLightUPnPHandler.c:GetEndDevices:1765> [0x2ebae520:""] GetEndDevices: ReqListType is SCAN_LIST

WEMO: [SD] GetDeviceList() 1

WEMO: [SD] SM_AddJoinedDeviceList()....dp

WEMO: [SD] sm_LoadJoinedDeviceList(): ListProcessed = [1]

WEMO: [SD] sm_LoadJoinedDeviceList(): field[0] = [f84 d90114d6713e1094 done
]

WEMO: [SD] SM_AddJoinedDeviceList : LoadJoinedDevice count = 0

WEMO: [SD] SM_UpdateDeviceList()....dp

WEMO: [SD] sm_GetDeviceInfo Entry.... 

WEMO: [SD] sm_GetDeviceInfo Exit : updated = [0x0]... 

> POST /apis/http/device/capabilityprofiles HTTP/1.1

Host: api.xbcs.net:8443

Content-Type: application/xml

Accept: application/xml

Authorization: B4750E1E1D84:xKrcqn7+3hoVQ3tgRabR0qR78G8=:1438675309

X-Belkin-Client-Type-Id: WeMo_WW_2.00.9462.DVT-OWRT-Link:52f8-406e-a5a6-5c5a2254868c

Content-Length: 1042

Expect: 100-continue



WEMO: [SD] *list = (SD_DeviceList)sDevConfig.DeviceList;....dp

WEMO: 14:53:31 | upnp.debug <ledLightUPnPHandler.c:CreateEndDeviceListXML:1415> [0x2ebae520:""] GetEndDevices: nDeviceCnt(1), nGroupCnt(0)

WEMO: 14:53:31 | upnp.debug <ledLightUPnPHandler.c:CreateEndDeviceListXML:1435> [0x2ebae520:""] GetEndDevices: nPaired(0), nUnpaired(1), ListType(SCAN_LIST)

WEMO: 14:53:31 | upnp.debug <ledLightUPnPHandler.c:GetCacheDeviceCapabilityValues:835> [0x2ebae520:""] Cache Device CapabCapality: 10500 -- bilityValue = 11....dp

WEMO: 14:53:31 | upnp.debug <ledLightUPnPHandler.c:GetCacheDeviceCapabilityValues:835> [0x2ebae520:""] Cache Device CapabCapality: 20500 -- bilityValue = 1....dp

WEMO: 14:53:31 | upnp.debug <ledLightUPnPHandler.c:GetCacheDeviceCapabilityValues:835> [0x2ebae520:""] Cache Device CapabCapality: 30501 -- bilityValue = 0....dp

WEMO: 14:53:31 | upnp.debug <ledLightUPnPHandler.c:GetCacheDeviceCapabilityValues:850> [0x2ebae520:""] GetCacheDeviceCapabilityValues: CapabilityValues = 11,1,0

WEMO: 14:53:31 | upnp.debug <ledLightUPnPHandler.c:GetEndDevices:1792> [0x2ebae520:""] GetEndDevices: === pszResponse ===

WEMO: upnp.debug <?xml version="1.0" encoding="utf-8"?><DeviceLists><DeviceList><DeviceListType>Unpaired</DeviceListType><DeviceInfos><DeviceInfo [ 1717989192 ]
WEMO: upnp.debug ><DeviceIndex>0</DeviceIndex><DeviceID>94103E71D61401D9</DeviceID><FriendlyName>WeMo Door/Window Sensor</FriendlyName><IconVersi [ 1717989192 ]
WEMO: upnp.debug on>1</IconVersion><FirmwareVersion>1F</FirmwareVersion><CapabilityIDs>10500,20500,30501</CapabilityIDs><CurrentState>11,1,0</Cur [ 1717989192 ]
WEMO: upnp.debug rentState><Manufacturer>Belkin</Manufacturer><ModelCode>F7C038</ModelCode><productName>DWSensor</productName><WeMoCertified>YES< [ 1717989192 ]
WEMO: upnp.debug /WeMoCertified></DeviceInfo></DeviceInfos></DeviceList></DeviceLists>
 [ 1717989192 ]
WEMO: 14:53:31 | app.debug <logger.c:pluginLog:331> [0x2f1ae520:""] wemoApp[1826:{}]:[2015-08-04][14:53:31.761830]<controlleedevice.c:CtrleeDeviceHandleActionRequest:1948> [0x2f1ae520:""] Action found: GetEndDevices

WEMO: 14:53:31 | upnp.debug <ledLightUPnPHandler.c:IsZigbeeSetupDone:1539> [0x2f1ae520:""] flag_setup_done is already existed...

WEMO: 14:53:31 | upnp.debug <ledLightUPnPHandler.c:GetEndDevices:1744> [0x2f1ae520:""] DevUDN uuid:Bridge-1_0-231347B010015A, pReqListType SCAN_LIST....dp

WEMO: 14:53:31 | upnp.debug <ledLightUPnPHandler.c:GetEndDevices:1765> [0x2f1ae520:""] GetEndDevices: ReqListType is SCAN_LIST

WEMO: [SD] GetDeviceList() 1

WEMO: [SD] SM_AddJoinedDeviceList()....dp

WEMO: [SD] sm_LoadJoinedDeviceList(): ListProcessed = [1]

WEMO: [SD] sm_LoadJoinedDeviceList(): field[0] = [f84 d90114d6713e1094 done
]

WEMO: [SD] SM_AddJoinedDeviceList : LoadJoinedDevice count = 0

WEMO: [SD] SM_UpdateDeviceList()....dp

WEMO: [SD] sm_GetDeviceInfo Entry.... 

WEMO: [SD] sm_GetDeviceInfo Exit : updated = [0x0]... 

< HTTP/1.1 100 Continue

WEMO: [SD] *list = (SD_DeviceList)sDevConfig.DeviceList;....dp

WEMO: 14:53:32 | upnp.debug <ledLightUPnPHandler.c:CreateEndDeviceListXML:1415> [0x2f1ae520:""] GetEndDevices: nDeviceCnt(1), nGroupCnt(0)

WEMO: 14:53:32 | upnp.debug <ledLightUPnPHandler.c:CreateEndDeviceListXML:1435> [0x2f1ae520:""] GetEndDevices: nPaired(0), nUnpaired(1), ListType(SCAN_LIST)

WEMO: 14:53:32 | upnp.debug <ledLightUPnPHandler.c:GetCacheDeviceCapabilityValues:835> [0x2f1ae520:""] Cache Device CapabCapality: 10500 -- bilityValue = 11....dp

WEMO: 14:53:32 | upnp.debug <ledLightUPnPHandler.c:GetCacheDeviceCapabilityValues:835> [0x2f1ae520:""] Cache Device CapabCapality: 20500 -- bilityValue = 1....dp

WEMO: 14:53:32 | upnp.debug <ledLightUPnPHandler.c:GetCacheDeviceCapabilityValues:835> [0x2f1ae520:""] Cache Device CapabCapality: 30501 -- bilityValue = 0....dp

WEMO: 14:53:32 | upnp.debug <ledLightUPnPHandler.c:GetCacheDeviceCapabilityValues:850> [0x2f1ae520:""] GetCacheDeviceCapabilityValues: CapabilityValues = 11,1,0

WEMO: 14:53:32 | upnp.debug <ledLightUPnPHandler.c:GetEndDevices:1792> [0x2f1ae520:""] GetEndDevices: === pszResponse ===

WEMO: upnp.debug <?xml version="1.0" encoding="utf-8"?><DeviceLists><DeviceList><DeviceListType>Unpaired</DeviceListType><DeviceInfos><DeviceInfo [ 1717989303 ]
WEMO: upnp.debug ><DeviceIndex>0</DeviceIndex><DeviceID>94103E71D61401D9</DeviceID><FriendlyName>WeMo Door/Window Sensor</FriendlyName><IconVersi [ 1717989303 ]
WEMO: upnp.debug on>1</IconVersion><FirmwareVersion>1F</FirmwareVersion><CapabilityIDs>10500,20500,30501</CapabilityIDs><CurrentState>11,1,0</Cur [ 1717989303 ]
WEMO: upnp.debug rentState><Manufacturer>Belkin</Manufacturer><ModelCode>F7C038</ModelCode><productName>DWSensor</productName><WeMoCertified>YES< [ 1717989303 ]
WEMO: upnp.debug /WeMoCertified></DeviceInfo></DeviceInfos></DeviceList></DeviceLists>
 [ 1717989303 ]
WEMO: 14:53:32 | app.debug <logger.c:pluginLog:331> [0x2e7ae520:""] wemoApp[1821:{}]:[2015-08-04][14:53:32.886258]<controlleedevice.c:CtrleeDeviceHandleActionRequest:1948> [0x2e7ae520:""] Action found: GetEndDevices

WEMO: 14:53:32 | upnp.debug <ledLightUPnPHandler.c:IsZigbeeSetupDone:1539> [0x2e7ae520:""] flag_setup_done is already existed...

WEMO: 14:53:32 | upnp.debug <ledLightUPnPHandler.c:GetEndDevices:1744> [0x2e7ae520:""] DevUDN uuid:Bridge-1_0-231347B010015A, pReqListType SCAN_LIST....dp

WEMO: 14:53:32 | upnp.debug <ledLightUPnPHandler.c:GetEndDevices:1765> [0x2e7ae520:""] GetEndDevices: ReqListType is SCAN_LIST

WEMO: [SD] GetDeviceList() 1

WEMO: [SD] SM_AddJoinedDeviceList()....dp

WEMO: [SD] sm_LoadJoinedDeviceList(): ListProcessed = [1]

WEMO: [SD] sm_LoadJoinedDeviceList(): field[0] = [f84 d90114d6713e1094 done
]

WEMO: [SD] SM_AddJoinedDeviceList : LoadJoinedDevice count = 0

WEMO: [SD] SM_UpdateDeviceList()....dp

WEMO: [SD] sm_GetDeviceInfo Entry.... 

WEMO: [SD] sm_GetDeviceInfo Exit : updated = [0x0]... 

WEMO: [SD] *list = (SD_DeviceList)sDevConfig.DeviceList;....dp

WEMO: 14:53:33 | upnp.debug <ledLightUPnPHandler.c:CreateEndDeviceListXML:1415> [0x2e7ae520:""] GetEndDevices: nDeviceCnt(1), nGroupCnt(0)

WEMO: 14:53:33 | upnp.debug <ledLightUPnPHandler.c:CreateEndDeviceListXML:1435> [0x2e7ae520:""] GetEndDevices: nPaired(0), nUnpaired(1), ListType(SCAN_LIST)

WEMO: 14:53:33 | upnp.debug <ledLightUPnPHandler.c:GetCacheDeviceCapabilityValues:835> [0x2e7ae520:""] Cache Device CapabCapality: 10500 -- bilityValue = 11....dp

WEMO: 14:53:33 | upnp.debug <ledLightUPnPHandler.c:GetCacheDeviceCapabilityValues:835> [0x2e7ae520:""] Cache Device CapabCapality: 20500 -- bilityValue = 1....dp

WEMO: 14:53:33 | upnp.debug <ledLightUPnPHandler.c:GetCacheDeviceCapabilityValues:835> [0x2e7ae520:""] Cache Device CapabCapality: 30501 -- bilityValue = 0....dp

WEMO: 14:53:33 | upnp.debug <ledLightUPnPHandler.c:GetCacheDeviceCapabilityValues:850> [0x2e7ae520:""] GetCacheDeviceCapabilityValues: CapabilityValues = 11,1,0

WEMO: 14:53:33 | upnp.debug <ledLightUPnPHandler.c:GetEndDevices:1792> [0x2e7ae520:""] GetEndDevices: === pszResponse ===

WEMO: upnp.debug <?xml version="1.0" encoding="utf-8"?><DeviceLists><DeviceList><DeviceListType>Unpaired</DeviceListType><DeviceInfos><DeviceInfo [ 1717989413 ]
WEMO: upnp.debug ><DeviceIndex>0</DeviceIndex><DeviceID>94103E71D61401D9</DeviceID><FriendlyName>WeMo Door/Window Sensor</FriendlyName><IconVersi [ 1717989413 ]
WEMO: upnp.debug on>1</IconVersion><FirmwareVersion>1F</FirmwareVersion><CapabilityIDs>10500,20500,30501</CapabilityIDs><CurrentState>11,1,0</Cur [ 1717989413 ]
WEMO: upnp.debug rentState><Manufacturer>Belkin</Manufacturer><ModelCode>F7C038</ModelCode><productName>DWSensor</productName><WeMoCertified>YES< [ 1717989413 ]
WEMO: upnp.debug /WeMoCertified></DeviceInfo></DeviceInfos></DeviceList></DeviceLists>
 [ 1717989413 ]
WEMO: 14:53:34 | app.debug <logger.c:pluginLog:331> [0x2e5ae520:""] wemoApp[1820:{}]:[2015-08-04][14:53:34.009259]<controlleedevice.c:CtrleeDeviceHandleActionRequest:1948> [0x2e5ae520:""] Action found: GetEndDevices

WEMO: 14:53:34 | upnp.debug <ledLightUPnPHandler.c:IsZigbeeSetupDone:1539> [0x2e5ae520:""] flag_setup_done is already existed...

WEMO: 14:53:34 | upnp.debug <ledLightUPnPHandler.c:GetEndDevices:1744> [0x2e5ae520:""] DevUDN uuid:Bridge-1_0-231347B010015A, pReqListType SCAN_LIST....dp

WEMO: 14:53:34 | upnp.debug <ledLightUPnPHandler.c:GetEndDevices:1765> [0x2e5ae520:""] GetEndDevices: ReqListType is SCAN_LIST

WEMO: [SD] GetDeviceList() 1

WEMO: [SD] PermitJoin()....dp

zigbee_api: zbSendCommand:ZB_CMD_NET_PERMITJOIN
zbSetPermitJoin:255

Starting IPC Receive:12
zigbeed node_id:0x0000, endpoint:0
cmd:105 p1:254 p2:0 p3:0 p4:0 
Full Name:/tmp/Belkin_settings/zbid.0000000000000000
No file:[/tmp/Belkin_settings/zbid.0000000000000000]
zbdSetTimeToAbort s_TimeToAbort:45978
IPC_CMD_SET_PERMITJOIN 
pJoin for 254 sec: 0x00

emAfPermitJoin duration:254 b_bcast:1 status:0x0 
Entering zbdReplyGeneralResponse, respValue:0x00000000, errorCode:0 
Leaving zbdReplyGeneralResponse
Ember_Status_Code:0x0 
Leaving IPC Receive:12
clientNetworkPermitJoin:*****result = 0
WEMO: [SD] SM_AddJoinedDeviceList()....dp

WEMO: [SD] sm_LoadJoinedDeviceList(): ListProcessed = [1]

WEMO: [SD] sm_LoadJoinedDeviceList(): field[0] = [f84 d90114d6713e1094 done
]

WEMO: [SD] SM_AddJoinedDeviceList : LoadJoinedDevice count = 0

WEMO: [SD] SM_UpdateDeviceList()....dp

WEMO: [SD] sm_GetDeviceInfo Entry.... 

WEMO: [SD] sm_GetDeviceInfo Exit : updated = [0x0]... 

< HTTP/1.1 206 Partial Content

< asyncServiceInvoke: false

< Content-Type: application/xml;charset=ISO-8859-1

< Date: Tue, 04 Aug 2015 07:53:33 GMT

< Server: Apache-Coyote/1.1

< X-Powered-By: Servlet/3.0; JBossAS-6

< Content-Length: 1506

< Connection: keep-alive

< 

WEMO: 14:53:34 | app.debug <logger.c:pluginLog:331> [0x2f7ae520:"RemoteWorkerThre"] wemoApp[1834:{RemoteWorkerThre}]:[2015-08-04][14:53:34.158592]<httpsWrapper.c:webAppSendData:2671> [0x2f7ae520:"RemoteWorkerThre"] HTTP Request URL https://api.xbcs.net:8443/apis/http/device/capabilityprofiles requested flag 1 disableFlag 1 httpsFlag 1 retVal 0 respCode 206

WEMO: 14:53:34 | remote.debug <ledLightRemoteHandler.c:SendHttpRequestWithAuth:823> [0x2f7ae520:"RemoteWorkerThre"] Length of HTTP Header = 278 

WEMO: 14:53:34 | remote.debug <ledLightRemoteHandler.c:SendHttpRequestWithAuth:824> [0x2f7ae520:"RemoteWorkerThre"] StatusCode of HTTP Response = 206 

WEMO: 14:53:34 | remote.debug <ledLightRemoteHandler.c:SendHttpRequestWithAuth:825> [0x2f7ae520:"RemoteWorkerThre"] Some response for HTTP request from cloud is received

WEMO: 14:53:34 | remote.debug <ledLightRemoteHandler.c:SendHttpRequestWithAuth:852> [0x2f7ae520:"RemoteWorkerThre"] Header retuned by server

WEMO: remote.debug HTTP/1.1 100 Continue

HTTP/1.1 206 Partial Content

asyncServiceInvoke: false

Content-Type: application/xml;charset=ISO-8859-1 [ 1717989439 ]
WEMO: remote.debug 

Date: Tue, 04 Aug 2015 07:53:33 GMT

Server: Apache-Coyote/1.1

X-Powered-By: Servlet/3.0; JBossAS-6

Content-Length: 1506

Co [ 1717989439 ]
WEMO: remote.debug nnection: keep-alive

 [ 1717989439 ]
WEMO: 14:53:34 | remote.debug <ledLightRemoteHandler.c:SendHttpRequestWithAuth:862> [0x2f7ae520:"RemoteWorkerThre"] Data retuned by server

WEMO: remote.debug <?xml version="1.0" encoding="UTF-8" standalone="yes"?><capabilityProfiles xmlns:modelns="http://datamodel.components.cs.belkin. [ 1717989439 ]
WEMO: remote.debug com/"><capabilityProfile><resultCode><code>ERR_INVALID_CAPABILITY_TYPE</code><description>Capability Profile type not valid</des [ 1717989439 ]
WEMO: remote.debug cription></resultCode><capabilityType><type>ZoneCtl</type></capabilityType><capabilityId>10500</capabilityId><profileName>IASZon [ 1717989439 ]
WEMO: remote.debug e</profileName><specification>0</specification><dataType>0</dataType></capabilityProfile><capabilityProfile><resultCode><code>ER [ 1717989439 ]
WEMO: remote.debug R_CAPABILITY_ID_ALREADY_EXIST</code><description>Capability Id already exists</description></resultCode><capabilityType><type></ [ 1717989439 ]
WEMO: remote.debug type></capabilityType><capabilityId>20500</capabilityId><profileName>SensorConfig</profileName><specification>0</specification>< [ 1717989439 ]
WEMO: remote.debug dataType>0</dataType></capabilityProfile><capabilityProfile><resultCode><code>ERR_CAPABILITY_ID_ALREADY_EXIST</code><description [ 1717989439 ]
WEMO: remote.debug >Capability Id already exists</description></resultCode><capabilityType><type></type></capabilityType><capabilityId>30501</capab [ 1717989439 ]
WEMO: remote.debug ilityId><profileName>SensorTestMode</profileName><specification>0</specification><dataType>0</dataType></capabilityProfile><capa [ 1717989439 ]
WEMO: remote.debug bilityProfile><resultCode><code>ERR_CAPABILITY_ID_ALREADY_EXIST</code><description>Capability Id already exists</description></r [ 1717989439 ]
WEMO: remote.debug esultCode><capabilityType><type></type></capabilityType><capabilityId>20502</capabilityId><profileName>SensorKeyPress</profileNa [ 1717989439 ]
WEMO: remote.debug me><specification>0</specification><dataType>0</dataType></capabilityProfile></capabilityProfiles> [ 1717989439 ]
WEMO: 14:53:34 | remote.debug <ledLightRemoteHandler.c:SendHttpRequestWithAuth:870> [0x2f7ae520:"RemoteWorkerThre"] --- Header Data returned by server ---

WEMO: remote.debug HTTP/1.1 100 Continue

HTTP/1.1 206 Partial Content

asyncServiceInvoke: false

Content-Type: application/xml;charset=ISO-8859-1 [ 1717989506 ]
WEMO: remote.debug 

Date: Tue, 04 Aug 2015 07:53:33 GMT

Server: Apache-Coyote/1.1

X-Powered-By: Servlet/3.0; JBossAS-6

Content-Length: 1506

Co [ 1717989506 ]
WEMO: remote.debug nnection: keep-alive

 [ 1717989506 ]
WEMO: 14:53:34 | remote.debug <ledLightRemoteHandler.c:SendHttpRequestWithAuth:879> [0x2f7ae520:"RemoteWorkerThre"] --- Data returned by server ---

WEMO: [truncated] 14:53:34 | remote.debug <ledLightRemoteHandler.c:SendHttpRequestWithAuth:880> [0x2f7ae520:"RemoteWorkerThre"] <?xml version="1.0" encoding="UTF-8" standalone="yes"?><capabilityProfiles xmlns:modelns="http://datamodel.components.cs.belkin.com/"><capabilityProfile><resultCode><code>ERR_INVALID_CAPABILITY_TYPE</code><description>Capability Profile type not valid</description></resultCode><capabilityType><type>ZoneCtl</type></capabilityType><capabilityId>10500</capabilityId><profileName>IASZone</profileName><specification>0</specification><dataType>0</dataType></capabilityProfile><capabilityProfile><resultCode><code>ERR_CAPABILITY_ID_ALREADY_EXIST</code><description>Capability Id already exists</description></resultCode><capabilityType><type></type></capabilityType><capabilityId>20500</capabilityId><profileName>SensorConfig</profileName><specification>0</specification><dataType>0</dataType></capabilityProfile><capabilityProfile><resultCode><code>ERR_CAPABILITY_ID_ALREADY_EX
WEMO: 14:53:34 | remote.debug <ledLightRemoteHandler.c:QueryCapabilityProfileList:1693> [0x2f7ae520:"RemoteWorkerThre"] RegisterCapabilityProfiles(nStatusCode = 206)

WEMO: 14:53:34 | remote.debug <ledLightRemoteHandler.c:RemoteWorkerThread:626> [0x2f7ae520:"RemoteWorkerThre"] QueryCapabilityProfileList(nStatusCode = 206)
